// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

public final class MemoryGameImplement_Stub
    extends java.rmi.server.RemoteStub
    implements MemoryGameInterface, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_connect_0;
    private static java.lang.reflect.Method $method_createNewGame_1;
    private static java.lang.reflect.Method $method_myChat_2;
    private static java.lang.reflect.Method $method_myMove_3;
    private static java.lang.reflect.Method $method_playerDisconnected_4;
    private static java.lang.reflect.Method $method_randomizeIntArray_5;
    private static java.lang.reflect.Method $method_randomizedIntArrayNewGame_6;
    private static java.lang.reflect.Method $method_setLevelChange_7;
    private static java.lang.reflect.Method $method_setNewGameIcon_8;
    private static java.lang.reflect.Method $method_setPicIcon_9;
    
    static {
	try {
	    $method_connect_0 = MemoryGameInterface.class.getMethod("connect", new java.lang.Class[] {CallBack.class});
	    $method_createNewGame_1 = MemoryGameInterface.class.getMethod("createNewGame", new java.lang.Class[] {});
	    $method_myChat_2 = MemoryGameInterface.class.getMethod("myChat", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_myMove_3 = MemoryGameInterface.class.getMethod("myMove", new java.lang.Class[] {int.class, java.lang.String.class, java.util.ArrayList.class});
	    $method_playerDisconnected_4 = MemoryGameInterface.class.getMethod("playerDisconnected", new java.lang.Class[] {java.lang.String.class});
	    $method_randomizeIntArray_5 = MemoryGameInterface.class.getMethod("randomizeIntArray", new java.lang.Class[] {int[].class});
	    $method_randomizedIntArrayNewGame_6 = MemoryGameInterface.class.getMethod("randomizedIntArrayNewGame", new java.lang.Class[] {int[].class});
	    $method_setLevelChange_7 = MemoryGameInterface.class.getMethod("setLevelChange", new java.lang.Class[] {javax.swing.Icon[].class, java.lang.String.class, int.class});
	    $method_setNewGameIcon_8 = MemoryGameInterface.class.getMethod("setNewGameIcon", new java.lang.Class[] {javax.swing.Icon[].class});
	    $method_setPicIcon_9 = MemoryGameInterface.class.getMethod("setPicIcon", new java.lang.Class[] {javax.swing.Icon[].class, java.lang.String.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public MemoryGameImplement_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of connect(CallBack)
    public java.lang.String connect(CallBack $param_CallBack_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_connect_0, new java.lang.Object[] {$param_CallBack_1}, -6603151893904198647L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of createNewGame()
    public void createNewGame()
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_createNewGame_1, null, 6746465943064324952L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of myChat(String, String)
    public void myChat(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_myChat_2, new java.lang.Object[] {$param_String_1, $param_String_2}, 3968462479351901083L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of myMove(int, String, ArrayList)
    public void myMove(int $param_int_1, java.lang.String $param_String_2, java.util.ArrayList $param_ArrayList_3)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_myMove_3, new java.lang.Object[] {new java.lang.Integer($param_int_1), $param_String_2, $param_ArrayList_3}, 5943520869065932903L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of playerDisconnected(String)
    public void playerDisconnected(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_playerDisconnected_4, new java.lang.Object[] {$param_String_1}, 2062237987598062265L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of randomizeIntArray(int[])
    public int[] randomizeIntArray(int[] $param_arrayOf_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_randomizeIntArray_5, new java.lang.Object[] {$param_arrayOf_int_1}, 3420521433668137320L);
	    return ((int[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of randomizedIntArrayNewGame(int[])
    public int[] randomizedIntArrayNewGame(int[] $param_arrayOf_int_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_randomizedIntArrayNewGame_6, new java.lang.Object[] {$param_arrayOf_int_1}, -7857263896433881528L);
	    return ((int[]) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setLevelChange(Icon[], String, int)
    public void setLevelChange(javax.swing.Icon[] $param_arrayOf_Icon_1, java.lang.String $param_String_2, int $param_int_3)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setLevelChange_7, new java.lang.Object[] {$param_arrayOf_Icon_1, $param_String_2, new java.lang.Integer($param_int_3)}, 3282764164207227249L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setNewGameIcon(Icon[])
    public void setNewGameIcon(javax.swing.Icon[] $param_arrayOf_Icon_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setNewGameIcon_8, new java.lang.Object[] {$param_arrayOf_Icon_1}, 4554996757477152697L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setPicIcon(Icon[], String, String)
    public void setPicIcon(javax.swing.Icon[] $param_arrayOf_Icon_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setPicIcon_9, new java.lang.Object[] {$param_arrayOf_Icon_1, $param_String_2, $param_String_3}, 7959526967663069452L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
